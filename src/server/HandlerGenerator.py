#!/usr/bin/env python
# -*- coding: utf-8 -*-

import os

CMD_PREFIX     = "ZZZ_"
DECLARE        = "//XXX:This is autogenerated file, do not modify!\n\n"
HANDLER_PREFIX = "zzz_"
INCLUDES       = ["MessageProcessor.h"]
TARGET         = "CommandHandlerAggregator.cpp"

scaned_targets = {'C':[], 'H':[]}

def FormatIncludeFile(fn):
    """
    Format include header.
    Arguments:
    - `fn`:
    """
    return '#include "%s"'%fn

def ProcessFile(arg, dirname, fnames):
    """Handling each file
    """
    for fn in fnames:
        print("%s\n"%(os.path.join(dirname, fn)))
        arg.append(FormatIncludeFile(os.path.join(dirname, fn)))
        pass
    pass

if __name__ == '__main__':
    fd = open(TARGET, "w")

    contents = []
    contents.append(DECLARE)

    for header in INCLUDES:
        contents.append(FormatIncludeFile(header))
    os.path.walk("CommandHanlders", ProcessFile, contents)

    fd = open(TARGET, "w")
    if fd is not None:
        for item in contents:
            fd.write(item + "\n")
        fd.flush()
        fd.close()
